{
  "version": "3.1",
  "log": [
    {
      "IERC165": {
        "inherit": [],
        "libraries": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "SafeMath": {
        "version": {
          "withMetadata": "49119b76f302a1f12c31b78155b133f6a35ee81eaf406cc85ca51ae7c645cb58",
          "withoutMetadata": "aaa148c474cd10e1a6cd0a52c0b55f1aa9b7bb7b42d7f1cb5acaea4f42f04bc8",
          "linkedWithoutMetadata": "aaa148c474cd10e1a6cd0a52c0b55f1aa9b7bb7b42d7f1cb5acaea4f42f04bc8"
        },
        "inherit": [],
        "libraries": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "IERC20": {
        "inherit": [],
        "libraries": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "SafeERC20": {
        "version": {
          "withMetadata": "b2c168c8c48d7ed99b1ea813a9118f30dd82eaae44a119b7c77901d51ee3765d",
          "withoutMetadata": "aaa148c474cd10e1a6cd0a52c0b55f1aa9b7bb7b42d7f1cb5acaea4f42f04bc8",
          "linkedWithoutMetadata": "aaa148c474cd10e1a6cd0a52c0b55f1aa9b7bb7b42d7f1cb5acaea4f42f04bc8"
        },
        "inherit": [],
        "libraries": [
          "SafeMath",
          "Address"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "IERC721": {
        "inherit": [
          "IERC165"
        ],
        "libraries": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "IERC721Receiver": {
        "inherit": [],
        "libraries": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "Address": {
        "version": {
          "withMetadata": "98bbeab2f2ff50ca857ab792bbcab8e7b2d9757c61d0de84691741059e29c52c",
          "withoutMetadata": "aaa148c474cd10e1a6cd0a52c0b55f1aa9b7bb7b42d7f1cb5acaea4f42f04bc8",
          "linkedWithoutMetadata": "aaa148c474cd10e1a6cd0a52c0b55f1aa9b7bb7b42d7f1cb5acaea4f42f04bc8"
        },
        "inherit": [],
        "libraries": [],
        "linkReferences": [],
        "errors": [
          {
            "kind": "delegatecall",
            "src": "@openzeppelin/contracts/utils/Address.sol:167"
          }
        ],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "EnglishAuctionNFT": {
        "version": {
          "withMetadata": "93e7eb8754e297e3a588a6fa925eaad8d0516aa9d8b027b4b7bbf7863c9f9f9e",
          "withoutMetadata": "0210b245617bafbbe0137ceb67e3018ca901a886592799bd945431937d611a4c",
          "linkedWithoutMetadata": "0210b245617bafbbe0137ceb67e3018ca901a886592799bd945431937d611a4c"
        },
        "inherit": [
          "IERC721Receiver",
          "Configurable",
          "Governable",
          "Initializable"
        ],
        "libraries": [
          "SafeMath",
          "SafeERC20"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "EnglishAuctionNFT",
              "label": "pools",
              "type": "t_array(t_struct(Pool)1141_storage)dyn_storage",
              "src": "contracts/EnglishAuctionNFT.sol:47"
            },
            {
              "contract": "EnglishAuctionNFT",
              "label": "creatorClaimedP",
              "type": "t_mapping(t_uint256,t_bool)",
              "src": "contracts/EnglishAuctionNFT.sol:50"
            },
            {
              "contract": "EnglishAuctionNFT",
              "label": "currentBidderP",
              "type": "t_mapping(t_uint256,t_address_payable)",
              "src": "contracts/EnglishAuctionNFT.sol:52"
            },
            {
              "contract": "EnglishAuctionNFT",
              "label": "currentBidderAmount1P",
              "type": "t_mapping(t_uint256,t_uint256)",
              "src": "contracts/EnglishAuctionNFT.sol:54"
            },
            {
              "contract": "EnglishAuctionNFT",
              "label": "myNameP",
              "type": "t_mapping(t_string_memory_ptr,t_uint256)",
              "src": "contracts/EnglishAuctionNFT.sol:57"
            },
            {
              "contract": "EnglishAuctionNFT",
              "label": "myBidP",
              "type": "t_mapping(t_address,t_array(t_uint256)dyn_storage)",
              "src": "contracts/EnglishAuctionNFT.sol:60"
            },
            {
              "contract": "EnglishAuctionNFT",
              "label": "myBidderAmount1P",
              "type": "t_mapping(t_address,t_mapping(t_uint256,t_uint256))",
              "src": "contracts/EnglishAuctionNFT.sol:62"
            },
            {
              "contract": "EnglishAuctionNFT",
              "label": "myClaimedP",
              "type": "t_mapping(t_address,t_mapping(t_uint256,t_bool))",
              "src": "contracts/EnglishAuctionNFT.sol:64"
            },
            {
              "contract": "EnglishAuctionNFT",
              "label": "bidCountP",
              "type": "t_mapping(t_uint256,t_uint256)",
              "src": "contracts/EnglishAuctionNFT.sol:67"
            },
            {
              "contract": "EnglishAuctionNFT",
              "label": "token1P",
              "type": "t_mapping(t_uint256,t_address)",
              "src": "contracts/EnglishAuctionNFT.sol:69"
            },
            {
              "contract": "EnglishAuctionNFT",
              "label": "checkToken0",
              "type": "t_bool",
              "src": "contracts/EnglishAuctionNFT.sol:72"
            },
            {
              "contract": "EnglishAuctionNFT",
              "label": "token0List",
              "type": "t_mapping(t_address,t_bool)",
              "src": "contracts/EnglishAuctionNFT.sol:75"
            },
            {
              "contract": "EnglishAuctionNFT",
              "label": "fee",
              "type": "t_uint256",
              "src": "contracts/EnglishAuctionNFT.sol:77"
            },
            {
              "contract": "EnglishAuctionNFT",
              "label": "feeMax",
              "type": "t_uint256",
              "src": "contracts/EnglishAuctionNFT.sol:79"
            },
            {
              "contract": "EnglishAuctionNFT",
              "label": "feeTo",
              "type": "t_address_payable",
              "src": "contracts/EnglishAuctionNFT.sol:81"
            },
            {
              "contract": "EnglishAuctionNFT",
              "label": "poolTime",
              "type": "t_mapping(t_uint256,t_bool)",
              "src": "contracts/EnglishAuctionNFT.sol:84"
            },
            {
              "contract": "EnglishAuctionNFT",
              "label": "indexer",
              "type": "t_address",
              "src": "contracts/EnglishAuctionNFT.sol:86"
            }
          ],
          "types": {
            "t_array(t_struct(Pool)1141_storage)dyn_storage": {
              "label": "struct EnglishAuctionNFT.Pool[]"
            },
            "t_struct(Pool)1141_storage": {
              "label": "struct EnglishAuctionNFT.Pool",
              "members": [
                {
                  "label": "creator",
                  "type": "t_address_payable"
                },
                {
                  "label": "name",
                  "type": "t_string_storage"
                },
                {
                  "label": "token0",
                  "type": "t_address"
                },
                {
                  "label": "tokenId",
                  "type": "t_uint256"
                },
                {
                  "label": "tokenAmount0",
                  "type": "t_uint256"
                },
                {
                  "label": "amountMin1",
                  "type": "t_uint256"
                },
                {
                  "label": "amountMinIncr1",
                  "type": "t_uint256"
                },
                {
                  "label": "confirmTime",
                  "type": "t_uint256"
                },
                {
                  "label": "closeAt",
                  "type": "t_uint256"
                },
                {
                  "label": "nftType",
                  "type": "t_uint256"
                }
              ]
            },
            "t_address_payable": {
              "label": "address payable"
            },
            "t_string_storage": {
              "label": "string"
            },
            "t_address": {
              "label": "address"
            },
            "t_uint256": {
              "label": "uint256"
            },
            "t_mapping(t_uint256,t_bool)": {
              "label": "mapping(uint256 => bool)"
            },
            "t_bool": {
              "label": "bool"
            },
            "t_mapping(t_uint256,t_address_payable)": {
              "label": "mapping(uint256 => address payable)"
            },
            "t_mapping(t_uint256,t_uint256)": {
              "label": "mapping(uint256 => uint256)"
            },
            "t_mapping(t_string_memory_ptr,t_uint256)": {
              "label": "mapping(string => uint256)"
            },
            "t_mapping(t_address,t_array(t_uint256)dyn_storage)": {
              "label": "mapping(address => uint256[])"
            },
            "t_array(t_uint256)dyn_storage": {
              "label": "uint256[]"
            },
            "t_mapping(t_address,t_mapping(t_uint256,t_uint256))": {
              "label": "mapping(address => mapping(uint256 => uint256))"
            },
            "t_mapping(t_address,t_mapping(t_uint256,t_bool))": {
              "label": "mapping(address => mapping(uint256 => bool))"
            },
            "t_mapping(t_uint256,t_address)": {
              "label": "mapping(uint256 => address)"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "FixedSwapNFT": {
        "version": {
          "withMetadata": "0835c55adbc8dba787c62e6e69ddad851c8d8c8a4efc0be8b4bec8e2fbfae59c",
          "withoutMetadata": "e57700532e9792a119fd3887163c47abd79c24934396668bb03946f8941c96c6",
          "linkedWithoutMetadata": "e57700532e9792a119fd3887163c47abd79c24934396668bb03946f8941c96c6"
        },
        "inherit": [
          "IERC721Receiver",
          "Configurable",
          "Governable",
          "Initializable"
        ],
        "libraries": [
          "SafeMath",
          "SafeERC20"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "FixedSwapNFT",
              "label": "pools",
              "type": "t_array(t_struct(Pool)2583_storage)dyn_storage",
              "src": "contracts/FixedSwapNFT.sol:43"
            },
            {
              "contract": "FixedSwapNFT",
              "label": "myCreatedP",
              "type": "t_mapping(t_address,t_uint256)",
              "src": "contracts/FixedSwapNFT.sol:46"
            },
            {
              "contract": "FixedSwapNFT",
              "label": "myNameP",
              "type": "t_mapping(t_string_memory_ptr,t_uint256)",
              "src": "contracts/FixedSwapNFT.sol:48"
            },
            {
              "contract": "FixedSwapNFT",
              "label": "creatorClaimedP",
              "type": "t_mapping(t_uint256,t_bool)",
              "src": "contracts/FixedSwapNFT.sol:51"
            },
            {
              "contract": "FixedSwapNFT",
              "label": "swappedP",
              "type": "t_mapping(t_uint256,t_bool)",
              "src": "contracts/FixedSwapNFT.sol:52"
            },
            {
              "contract": "FixedSwapNFT",
              "label": "checkToken0",
              "type": "t_bool",
              "src": "contracts/FixedSwapNFT.sol:55"
            },
            {
              "contract": "FixedSwapNFT",
              "label": "token0List",
              "type": "t_mapping(t_address,t_bool)",
              "src": "contracts/FixedSwapNFT.sol:57"
            },
            {
              "contract": "FixedSwapNFT",
              "label": "swappedAmount0P",
              "type": "t_mapping(t_uint256,t_uint256)",
              "src": "contracts/FixedSwapNFT.sol:60"
            },
            {
              "contract": "FixedSwapNFT",
              "label": "swappedAmount1P",
              "type": "t_mapping(t_uint256,t_uint256)",
              "src": "contracts/FixedSwapNFT.sol:62"
            },
            {
              "contract": "FixedSwapNFT",
              "label": "indexer",
              "type": "t_address",
              "src": "contracts/FixedSwapNFT.sol:64"
            }
          ],
          "types": {
            "t_array(t_struct(Pool)2583_storage)dyn_storage": {
              "label": "struct FixedSwapNFT.Pool[]"
            },
            "t_struct(Pool)2583_storage": {
              "label": "struct FixedSwapNFT.Pool",
              "members": [
                {
                  "label": "creator",
                  "type": "t_address_payable"
                },
                {
                  "label": "name",
                  "type": "t_string_storage"
                },
                {
                  "label": "token0",
                  "type": "t_address"
                },
                {
                  "label": "token1",
                  "type": "t_address"
                },
                {
                  "label": "tokenId",
                  "type": "t_uint256"
                },
                {
                  "label": "amountTotal0",
                  "type": "t_uint256"
                },
                {
                  "label": "amountTotal1",
                  "type": "t_uint256"
                },
                {
                  "label": "closeAt",
                  "type": "t_uint256"
                },
                {
                  "label": "nftType",
                  "type": "t_uint256"
                }
              ]
            },
            "t_address_payable": {
              "label": "address payable"
            },
            "t_string_storage": {
              "label": "string"
            },
            "t_address": {
              "label": "address"
            },
            "t_uint256": {
              "label": "uint256"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)"
            },
            "t_mapping(t_string_memory_ptr,t_uint256)": {
              "label": "mapping(string => uint256)"
            },
            "t_mapping(t_uint256,t_bool)": {
              "label": "mapping(uint256 => bool)"
            },
            "t_bool": {
              "label": "bool"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)"
            },
            "t_mapping(t_uint256,t_uint256)": {
              "label": "mapping(uint256 => uint256)"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "Configurable": {
        "version": {
          "withMetadata": "036e467c13a9e997896d61e819e094bb1a84b2bd88649f05c23e7bfa88fd7fce",
          "withoutMetadata": "bac30abb193906da312261f2a037e6852f621987881a75bf8f9855c72e56243a",
          "linkedWithoutMetadata": "bac30abb193906da312261f2a037e6852f621987881a75bf8f9855c72e56243a"
        },
        "inherit": [
          "Governable",
          "Initializable"
        ],
        "libraries": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "Configurable",
              "label": "config",
              "type": "t_mapping(t_bytes32,t_uint256)",
              "src": "contracts/Governable.sol:118"
            }
          ],
          "types": {
            "t_mapping(t_bytes32,t_uint256)": {
              "label": "mapping(bytes32 => uint256)"
            },
            "t_bytes32": {
              "label": "bytes32"
            },
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "Governable": {
        "version": {
          "withMetadata": "94eee548be16c032dd761a93bee8ba9d3722a206845c3f210e59e47d163cb2ff",
          "withoutMetadata": "8a11bf0f10ff34fb3b2b7db61c7301f4f99fe6dc8c72a0484a9f76af2f6a6fb0",
          "linkedWithoutMetadata": "8a11bf0f10ff34fb3b2b7db61c7301f4f99fe6dc8c72a0484a9f76af2f6a6fb0"
        },
        "inherit": [
          "Initializable"
        ],
        "libraries": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "Governable",
              "label": "governor",
              "type": "t_address",
              "src": "contracts/Governable.sol:67"
            }
          ],
          "types": {
            "t_address": {
              "label": "address"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "Initializable": {
        "version": {
          "withMetadata": "d0dfb6f0fbd797fca6fc8b191a7756d94b4def39954957cd75c1e456a7f4566f",
          "withoutMetadata": "ac0db523ddc3e330f735df7b3b0b24460531c71290a891170e840f8f67d5ff6b",
          "linkedWithoutMetadata": "ac0db523ddc3e330f735df7b3b0b24460531c71290a891170e840f8f67d5ff6b"
        },
        "inherit": [],
        "libraries": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "Initializable",
              "label": "initialized",
              "type": "t_bool",
              "src": "contracts/Governable.sol:22"
            },
            {
              "contract": "Initializable",
              "label": "initializing",
              "type": "t_bool",
              "src": "contracts/Governable.sol:27"
            },
            {
              "contract": "Initializable",
              "label": "______gap",
              "type": "t_array(t_uint256)50_storage",
              "src": "contracts/Governable.sol:62"
            }
          ],
          "types": {
            "t_bool": {
              "label": "bool"
            },
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]"
            },
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "NFTIndexer": {
        "version": {
          "withMetadata": "e529c14a61709e69dd847acc5d18299f2ff99356e2e407ed946bbe158cd1b216",
          "withoutMetadata": "fe6fb7632971cfd217b5a620070a21349ff9f4889051a90e8404eccf4723cb42",
          "linkedWithoutMetadata": "fe6fb7632971cfd217b5a620070a21349ff9f4889051a90e8404eccf4723cb42"
        },
        "inherit": [
          "Governable",
          "Initializable"
        ],
        "libraries": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "NFTIndexer",
              "label": "NFT721Auction",
              "type": "t_mapping(t_address,t_mapping(t_uint256,t_uint256))",
              "src": "contracts/NFTIndexer.sol:8"
            },
            {
              "contract": "NFTIndexer",
              "label": "NFT721Fixswap",
              "type": "t_mapping(t_address,t_mapping(t_uint256,t_uint256))",
              "src": "contracts/NFTIndexer.sol:10"
            },
            {
              "contract": "NFTIndexer",
              "label": "NFT1155Auction",
              "type": "t_mapping(t_address,t_mapping(t_uint256,t_mapping(t_address,t_uint256)))",
              "src": "contracts/NFTIndexer.sol:12"
            },
            {
              "contract": "NFTIndexer",
              "label": "NFT1155Fixswap",
              "type": "t_mapping(t_address,t_mapping(t_uint256,t_mapping(t_address,t_uint256)))",
              "src": "contracts/NFTIndexer.sol:14"
            },
            {
              "contract": "NFTIndexer",
              "label": "auction",
              "type": "t_address",
              "src": "contracts/NFTIndexer.sol:16"
            },
            {
              "contract": "NFTIndexer",
              "label": "fixswap",
              "type": "t_address",
              "src": "contracts/NFTIndexer.sol:17"
            }
          ],
          "types": {
            "t_mapping(t_address,t_mapping(t_uint256,t_uint256))": {
              "label": "mapping(address => mapping(uint256 => uint256))"
            },
            "t_address": {
              "label": "address"
            },
            "t_mapping(t_uint256,t_uint256)": {
              "label": "mapping(uint256 => uint256)"
            },
            "t_uint256": {
              "label": "uint256"
            },
            "t_mapping(t_address,t_mapping(t_uint256,t_mapping(t_address,t_uint256)))": {
              "label": "mapping(address => mapping(uint256 => mapping(address => uint256)))"
            },
            "t_mapping(t_uint256,t_mapping(t_address,t_uint256))": {
              "label": "mapping(uint256 => mapping(address => uint256))"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "IERC1155": {
        "inherit": [],
        "libraries": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      }
    },
    {
      "Configurable": {
        "version": {
          "withMetadata": "036e467c13a9e997896d61e819e094bb1a84b2bd88649f05c23e7bfa88fd7fce",
          "withoutMetadata": "bac30abb193906da312261f2a037e6852f621987881a75bf8f9855c72e56243a",
          "linkedWithoutMetadata": "bac30abb193906da312261f2a037e6852f621987881a75bf8f9855c72e56243a"
        },
        "inherit": [
          "Governable",
          "Initializable"
        ],
        "libraries": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "Configurable",
              "label": "config",
              "type": "t_mapping(t_bytes32,t_uint256)",
              "src": "contracts/Governable.sol:118"
            }
          ],
          "types": {
            "t_mapping(t_bytes32,t_uint256)": {
              "label": "mapping(bytes32 => uint256)"
            },
            "t_bytes32": {
              "label": "bytes32"
            },
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "Governable": {
        "version": {
          "withMetadata": "94eee548be16c032dd761a93bee8ba9d3722a206845c3f210e59e47d163cb2ff",
          "withoutMetadata": "8a11bf0f10ff34fb3b2b7db61c7301f4f99fe6dc8c72a0484a9f76af2f6a6fb0",
          "linkedWithoutMetadata": "8a11bf0f10ff34fb3b2b7db61c7301f4f99fe6dc8c72a0484a9f76af2f6a6fb0"
        },
        "inherit": [
          "Initializable"
        ],
        "libraries": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "Governable",
              "label": "governor",
              "type": "t_address",
              "src": "contracts/Governable.sol:67"
            }
          ],
          "types": {
            "t_address": {
              "label": "address"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "Initializable": {
        "version": {
          "withMetadata": "d0dfb6f0fbd797fca6fc8b191a7756d94b4def39954957cd75c1e456a7f4566f",
          "withoutMetadata": "ac0db523ddc3e330f735df7b3b0b24460531c71290a891170e840f8f67d5ff6b",
          "linkedWithoutMetadata": "ac0db523ddc3e330f735df7b3b0b24460531c71290a891170e840f8f67d5ff6b"
        },
        "inherit": [],
        "libraries": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "Initializable",
              "label": "initialized",
              "type": "t_bool",
              "src": "contracts/Governable.sol:22"
            },
            {
              "contract": "Initializable",
              "label": "initializing",
              "type": "t_bool",
              "src": "contracts/Governable.sol:27"
            },
            {
              "contract": "Initializable",
              "label": "______gap",
              "type": "t_array(t_uint256)50_storage",
              "src": "contracts/Governable.sol:62"
            }
          ],
          "types": {
            "t_bool": {
              "label": "bool"
            },
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]"
            },
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "NFTIndexer": {
        "version": {
          "withMetadata": "e529c14a61709e69dd847acc5d18299f2ff99356e2e407ed946bbe158cd1b216",
          "withoutMetadata": "fe6fb7632971cfd217b5a620070a21349ff9f4889051a90e8404eccf4723cb42",
          "linkedWithoutMetadata": "fe6fb7632971cfd217b5a620070a21349ff9f4889051a90e8404eccf4723cb42"
        },
        "inherit": [
          "Governable",
          "Initializable"
        ],
        "libraries": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "NFTIndexer",
              "label": "NFT721Auction",
              "type": "t_mapping(t_address,t_mapping(t_uint256,t_uint256))",
              "src": "contracts/NFTIndexer.sol:8"
            },
            {
              "contract": "NFTIndexer",
              "label": "NFT721Fixswap",
              "type": "t_mapping(t_address,t_mapping(t_uint256,t_uint256))",
              "src": "contracts/NFTIndexer.sol:10"
            },
            {
              "contract": "NFTIndexer",
              "label": "NFT1155Auction",
              "type": "t_mapping(t_address,t_mapping(t_uint256,t_mapping(t_address,t_uint256)))",
              "src": "contracts/NFTIndexer.sol:12"
            },
            {
              "contract": "NFTIndexer",
              "label": "NFT1155Fixswap",
              "type": "t_mapping(t_address,t_mapping(t_uint256,t_mapping(t_address,t_uint256)))",
              "src": "contracts/NFTIndexer.sol:14"
            },
            {
              "contract": "NFTIndexer",
              "label": "auction",
              "type": "t_address",
              "src": "contracts/NFTIndexer.sol:16"
            },
            {
              "contract": "NFTIndexer",
              "label": "fixswap",
              "type": "t_address",
              "src": "contracts/NFTIndexer.sol:17"
            }
          ],
          "types": {
            "t_mapping(t_address,t_mapping(t_uint256,t_uint256))": {
              "label": "mapping(address => mapping(uint256 => uint256))"
            },
            "t_address": {
              "label": "address"
            },
            "t_mapping(t_uint256,t_uint256)": {
              "label": "mapping(uint256 => uint256)"
            },
            "t_uint256": {
              "label": "uint256"
            },
            "t_mapping(t_address,t_mapping(t_uint256,t_mapping(t_address,t_uint256)))": {
              "label": "mapping(address => mapping(uint256 => mapping(address => uint256)))"
            },
            "t_mapping(t_uint256,t_mapping(t_address,t_uint256))": {
              "label": "mapping(uint256 => mapping(address => uint256))"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)"
            }
          },
          "layoutVersion": "1.1"
        }
      }
    },
    {
      "ERC165": {
        "inherit": [
          "IERC165"
        ],
        "libraries": [],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ERC165",
            "src": "@openzeppelin/contracts/introspection/ERC165.sol:24"
          }
        ],
        "layout": {
          "storage": [
            {
              "contract": "ERC165",
              "label": "_supportedInterfaces",
              "type": "t_mapping(t_bytes4,t_bool)",
              "src": "@openzeppelin/contracts/introspection/ERC165.sol:22"
            }
          ],
          "types": {
            "t_mapping(t_bytes4,t_bool)": {
              "label": "mapping(bytes4 => bool)"
            },
            "t_bytes4": {
              "label": "bytes4"
            },
            "t_bool": {
              "label": "bool"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "IERC165": {
        "inherit": [],
        "libraries": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "SafeMath": {
        "version": {
          "withMetadata": "49119b76f302a1f12c31b78155b133f6a35ee81eaf406cc85ca51ae7c645cb58",
          "withoutMetadata": "aaa148c474cd10e1a6cd0a52c0b55f1aa9b7bb7b42d7f1cb5acaea4f42f04bc8",
          "linkedWithoutMetadata": "aaa148c474cd10e1a6cd0a52c0b55f1aa9b7bb7b42d7f1cb5acaea4f42f04bc8"
        },
        "inherit": [],
        "libraries": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "ERC1155": {
        "version": {
          "withMetadata": "72daaaa98becea76a2ed507d1f87d1dae8bf48ecb5581b4fc1800c552c6f4af7",
          "withoutMetadata": "9b4079f1619df61d64184501942d5a8f87b670b9104b444de052b8e1fc7eee0c",
          "linkedWithoutMetadata": "9b4079f1619df61d64184501942d5a8f87b670b9104b444de052b8e1fc7eee0c"
        },
        "inherit": [
          "IERC1155MetadataURI",
          "IERC1155",
          "ERC165",
          "IERC165",
          "Context"
        ],
        "libraries": [
          "SafeMath",
          "Address"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ERC1155",
            "src": "@openzeppelin/contracts/token/ERC1155/ERC1155.sol:55"
          }
        ],
        "layout": {
          "storage": [
            {
              "contract": "ERC1155",
              "label": "_balances",
              "type": "t_mapping(t_uint256,t_mapping(t_address,t_uint256))",
              "src": "@openzeppelin/contracts/token/ERC1155/ERC1155.sol:26"
            },
            {
              "contract": "ERC1155",
              "label": "_operatorApprovals",
              "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
              "src": "@openzeppelin/contracts/token/ERC1155/ERC1155.sol:29"
            },
            {
              "contract": "ERC1155",
              "label": "_uri",
              "type": "t_string_storage",
              "src": "@openzeppelin/contracts/token/ERC1155/ERC1155.sol:32"
            }
          ],
          "types": {
            "t_mapping(t_uint256,t_mapping(t_address,t_uint256))": {
              "label": "mapping(uint256 => mapping(address => uint256))"
            },
            "t_uint256": {
              "label": "uint256"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)"
            },
            "t_address": {
              "label": "address"
            },
            "t_mapping(t_address,t_mapping(t_address,t_bool))": {
              "label": "mapping(address => mapping(address => bool))"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)"
            },
            "t_bool": {
              "label": "bool"
            },
            "t_string_storage": {
              "label": "string"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "IERC1155": {
        "inherit": [],
        "libraries": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "IERC1155MetadataURI": {
        "inherit": [
          "IERC1155",
          "IERC165"
        ],
        "libraries": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "IERC1155Receiver": {
        "inherit": [
          "IERC165"
        ],
        "libraries": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "IERC20": {
        "inherit": [],
        "libraries": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "SafeERC20": {
        "version": {
          "withMetadata": "b2c168c8c48d7ed99b1ea813a9118f30dd82eaae44a119b7c77901d51ee3765d",
          "withoutMetadata": "aaa148c474cd10e1a6cd0a52c0b55f1aa9b7bb7b42d7f1cb5acaea4f42f04bc8",
          "linkedWithoutMetadata": "aaa148c474cd10e1a6cd0a52c0b55f1aa9b7bb7b42d7f1cb5acaea4f42f04bc8"
        },
        "inherit": [],
        "libraries": [
          "SafeMath",
          "Address"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "ERC721": {
        "version": {
          "withMetadata": "1a9e4672ad4bce0f38a01d65a3c23d30bce1ae5589d1c7571b91929726635452",
          "withoutMetadata": "46c88065a57ecf9681be39cae5ff49e88c55b8623f1fb46f8fc1c26e35507425",
          "linkedWithoutMetadata": "46c88065a57ecf9681be39cae5ff49e88c55b8623f1fb46f8fc1c26e35507425"
        },
        "inherit": [
          "IERC721Enumerable",
          "IERC721Metadata",
          "IERC721",
          "ERC165",
          "IERC165",
          "Context"
        ],
        "libraries": [
          "SafeMath",
          "Address",
          "EnumerableSet",
          "EnumerableMap",
          "Strings"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ERC721",
            "src": "@openzeppelin/contracts/token/ERC721/ERC721.sol:93"
          }
        ],
        "layout": {
          "storage": [
            {
              "contract": "ERC721",
              "label": "_holderTokens",
              "type": "t_mapping(t_address,t_struct(UintSet)4312_storage)",
              "src": "@openzeppelin/contracts/token/ERC721/ERC721.sol:33"
            },
            {
              "contract": "ERC721",
              "label": "_tokenOwners",
              "type": "t_struct(UintToAddressMap)3689_storage",
              "src": "@openzeppelin/contracts/token/ERC721/ERC721.sol:36"
            },
            {
              "contract": "ERC721",
              "label": "_tokenApprovals",
              "type": "t_mapping(t_uint256,t_address)",
              "src": "@openzeppelin/contracts/token/ERC721/ERC721.sol:39"
            },
            {
              "contract": "ERC721",
              "label": "_operatorApprovals",
              "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
              "src": "@openzeppelin/contracts/token/ERC721/ERC721.sol:42"
            },
            {
              "contract": "ERC721",
              "label": "_name",
              "type": "t_string_storage",
              "src": "@openzeppelin/contracts/token/ERC721/ERC721.sol:45"
            },
            {
              "contract": "ERC721",
              "label": "_symbol",
              "type": "t_string_storage",
              "src": "@openzeppelin/contracts/token/ERC721/ERC721.sol:48"
            },
            {
              "contract": "ERC721",
              "label": "_tokenURIs",
              "type": "t_mapping(t_uint256,t_string_storage)",
              "src": "@openzeppelin/contracts/token/ERC721/ERC721.sol:51"
            },
            {
              "contract": "ERC721",
              "label": "_baseURI",
              "type": "t_string_storage",
              "src": "@openzeppelin/contracts/token/ERC721/ERC721.sol:54"
            }
          ],
          "types": {
            "t_mapping(t_address,t_struct(UintSet)4312_storage)": {
              "label": "mapping(address => struct EnumerableSet.UintSet)"
            },
            "t_address": {
              "label": "address"
            },
            "t_struct(UintSet)4312_storage": {
              "label": "struct EnumerableSet.UintSet",
              "members": [
                {
                  "label": "_inner",
                  "type": "t_struct(Set)3926_storage"
                }
              ]
            },
            "t_struct(Set)3926_storage": {
              "label": "struct EnumerableSet.Set",
              "members": [
                {
                  "label": "_values",
                  "type": "t_array(t_bytes32)dyn_storage"
                },
                {
                  "label": "_indexes",
                  "type": "t_mapping(t_bytes32,t_uint256)"
                }
              ]
            },
            "t_array(t_bytes32)dyn_storage": {
              "label": "bytes32[]"
            },
            "t_bytes32": {
              "label": "bytes32"
            },
            "t_mapping(t_bytes32,t_uint256)": {
              "label": "mapping(bytes32 => uint256)"
            },
            "t_uint256": {
              "label": "uint256"
            },
            "t_struct(UintToAddressMap)3689_storage": {
              "label": "struct EnumerableMap.UintToAddressMap",
              "members": [
                {
                  "label": "_inner",
                  "type": "t_struct(Map)3371_storage"
                }
              ]
            },
            "t_struct(Map)3371_storage": {
              "label": "struct EnumerableMap.Map",
              "members": [
                {
                  "label": "_entries",
                  "type": "t_array(t_struct(MapEntry)3363_storage)dyn_storage"
                },
                {
                  "label": "_indexes",
                  "type": "t_mapping(t_bytes32,t_uint256)"
                }
              ]
            },
            "t_array(t_struct(MapEntry)3363_storage)dyn_storage": {
              "label": "struct EnumerableMap.MapEntry[]"
            },
            "t_struct(MapEntry)3363_storage": {
              "label": "struct EnumerableMap.MapEntry",
              "members": [
                {
                  "label": "_key",
                  "type": "t_bytes32"
                },
                {
                  "label": "_value",
                  "type": "t_bytes32"
                }
              ]
            },
            "t_mapping(t_uint256,t_address)": {
              "label": "mapping(uint256 => address)"
            },
            "t_mapping(t_address,t_mapping(t_address,t_bool))": {
              "label": "mapping(address => mapping(address => bool))"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)"
            },
            "t_bool": {
              "label": "bool"
            },
            "t_string_storage": {
              "label": "string"
            },
            "t_mapping(t_uint256,t_string_storage)": {
              "label": "mapping(uint256 => string)"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "IERC721": {
        "inherit": [
          "IERC165"
        ],
        "libraries": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "IERC721Enumerable": {
        "inherit": [
          "IERC721",
          "IERC165"
        ],
        "libraries": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "IERC721Metadata": {
        "inherit": [
          "IERC721",
          "IERC165"
        ],
        "libraries": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "IERC721Receiver": {
        "inherit": [],
        "libraries": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "Address": {
        "version": {
          "withMetadata": "98bbeab2f2ff50ca857ab792bbcab8e7b2d9757c61d0de84691741059e29c52c",
          "withoutMetadata": "aaa148c474cd10e1a6cd0a52c0b55f1aa9b7bb7b42d7f1cb5acaea4f42f04bc8",
          "linkedWithoutMetadata": "aaa148c474cd10e1a6cd0a52c0b55f1aa9b7bb7b42d7f1cb5acaea4f42f04bc8"
        },
        "inherit": [],
        "libraries": [],
        "linkReferences": [],
        "errors": [
          {
            "kind": "delegatecall",
            "src": "@openzeppelin/contracts/utils/Address.sol:167"
          }
        ],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "Context": {
        "inherit": [],
        "libraries": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "EnumerableMap": {
        "version": {
          "withMetadata": "2c640010dc9e93acf89e9d9e484af94dd7cae3fa741d53ff5f4e48cf88774042",
          "withoutMetadata": "aaa148c474cd10e1a6cd0a52c0b55f1aa9b7bb7b42d7f1cb5acaea4f42f04bc8",
          "linkedWithoutMetadata": "aaa148c474cd10e1a6cd0a52c0b55f1aa9b7bb7b42d7f1cb5acaea4f42f04bc8"
        },
        "inherit": [],
        "libraries": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "EnumerableSet": {
        "version": {
          "withMetadata": "5f98ba54e975f59c0c0b3a9eecf685a38e059978a831921932a7f8054473678f",
          "withoutMetadata": "aaa148c474cd10e1a6cd0a52c0b55f1aa9b7bb7b42d7f1cb5acaea4f42f04bc8",
          "linkedWithoutMetadata": "aaa148c474cd10e1a6cd0a52c0b55f1aa9b7bb7b42d7f1cb5acaea4f42f04bc8"
        },
        "inherit": [],
        "libraries": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "Strings": {
        "version": {
          "withMetadata": "05c337557df7922e4c6324e8b30f21f1bae594fd95eb9fbbbb7c99312d703bcd",
          "withoutMetadata": "aaa148c474cd10e1a6cd0a52c0b55f1aa9b7bb7b42d7f1cb5acaea4f42f04bc8",
          "linkedWithoutMetadata": "aaa148c474cd10e1a6cd0a52c0b55f1aa9b7bb7b42d7f1cb5acaea4f42f04bc8"
        },
        "inherit": [],
        "libraries": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "DFA1155NFT": {
        "version": {
          "withMetadata": "2957faf9bca0b624eb8a2fbaace9dd7317deb47cf65c8a26a0a0f2f1067c9691",
          "withoutMetadata": "c5dd87dbcb8a65f532eef26f80998ab3285f7a897fd8bc7690f346dac91a2d12",
          "linkedWithoutMetadata": "c5dd87dbcb8a65f532eef26f80998ab3285f7a897fd8bc7690f346dac91a2d12"
        },
        "inherit": [
          "ERC1155",
          "IERC1155MetadataURI",
          "IERC1155",
          "ERC165",
          "IERC165",
          "Context",
          "Governable",
          "Initializable"
        ],
        "libraries": [
          "Strings"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "DFA1155NFT",
            "src": "contracts/DFA1155NFT.sol:26"
          }
        ],
        "layout": {
          "storage": [
            {
              "contract": "DFA1155NFT",
              "label": "_counter",
              "type": "t_uint256",
              "src": "contracts/DFA1155NFT.sol:13"
            },
            {
              "contract": "DFA1155NFT",
              "label": "name",
              "type": "t_string_storage",
              "src": "contracts/DFA1155NFT.sol:14"
            },
            {
              "contract": "DFA1155NFT",
              "label": "symbol",
              "type": "t_string_storage",
              "src": "contracts/DFA1155NFT.sol:15"
            },
            {
              "contract": "DFA1155NFT",
              "label": "baseURI",
              "type": "t_string_storage",
              "src": "contracts/DFA1155NFT.sol:16"
            },
            {
              "contract": "DFA1155NFT",
              "label": "artist",
              "type": "t_mapping(t_address,t_bool)",
              "src": "contracts/DFA1155NFT.sol:19"
            }
          ],
          "types": {
            "t_uint256": {
              "label": "uint256"
            },
            "t_string_storage": {
              "label": "string"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)"
            },
            "t_address": {
              "label": "address"
            },
            "t_bool": {
              "label": "bool"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "DFA721NFT": {
        "version": {
          "withMetadata": "225c446a1e846689a088809019ff5f84162fe503a51ea6229ffe33fd96c83fdc",
          "withoutMetadata": "27a1b1993b4e23bfe5b87e8ab2f71213b683e4d2e7ef634c584615f7ca8e295b",
          "linkedWithoutMetadata": "27a1b1993b4e23bfe5b87e8ab2f71213b683e4d2e7ef634c584615f7ca8e295b"
        },
        "inherit": [
          "ERC721",
          "IERC721Enumerable",
          "IERC721Metadata",
          "IERC721",
          "ERC165",
          "IERC165",
          "Context",
          "Governable",
          "Initializable"
        ],
        "libraries": [],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "DFA721NFT",
            "src": "contracts/DFA721NFT.sol:21"
          }
        ],
        "layout": {
          "storage": [
            {
              "contract": "DFA721NFT",
              "label": "_counter",
              "type": "t_uint256",
              "src": "contracts/DFA721NFT.sol:11"
            },
            {
              "contract": "DFA721NFT",
              "label": "artist",
              "type": "t_mapping(t_address,t_bool)",
              "src": "contracts/DFA721NFT.sol:14"
            }
          ],
          "types": {
            "t_uint256": {
              "label": "uint256"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)"
            },
            "t_address": {
              "label": "address"
            },
            "t_bool": {
              "label": "bool"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "EnglishAuctionNFT": {
        "version": {
          "withMetadata": "535473a8e005e184e54c70f82aea39048d2ca7a4b0cfb35625e926f68c8e4566",
          "withoutMetadata": "1e21e69e7f0ed76abb809e0ff14f2b79950633a492d43f31d8f7d9452cb6cee3",
          "linkedWithoutMetadata": "1e21e69e7f0ed76abb809e0ff14f2b79950633a492d43f31d8f7d9452cb6cee3"
        },
        "inherit": [
          "IERC721Receiver",
          "Configurable",
          "Governable",
          "Initializable"
        ],
        "libraries": [
          "SafeMath",
          "SafeERC20"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "EnglishAuctionNFT",
              "label": "pools",
              "type": "t_array(t_struct(Pool)4848_storage)dyn_storage",
              "src": "contracts/EnglishAuctionNFT.sol:46"
            },
            {
              "contract": "EnglishAuctionNFT",
              "label": "creatorClaimedP",
              "type": "t_mapping(t_uint256,t_bool)",
              "src": "contracts/EnglishAuctionNFT.sol:49"
            },
            {
              "contract": "EnglishAuctionNFT",
              "label": "currentBidderP",
              "type": "t_mapping(t_uint256,t_address_payable)",
              "src": "contracts/EnglishAuctionNFT.sol:51"
            },
            {
              "contract": "EnglishAuctionNFT",
              "label": "currentBidderAmount1P",
              "type": "t_mapping(t_uint256,t_uint256)",
              "src": "contracts/EnglishAuctionNFT.sol:53"
            },
            {
              "contract": "EnglishAuctionNFT",
              "label": "myNameP",
              "type": "t_mapping(t_string_memory_ptr,t_uint256)",
              "src": "contracts/EnglishAuctionNFT.sol:56"
            },
            {
              "contract": "EnglishAuctionNFT",
              "label": "myBidP",
              "type": "t_mapping(t_address,t_array(t_uint256)dyn_storage)",
              "src": "contracts/EnglishAuctionNFT.sol:59"
            },
            {
              "contract": "EnglishAuctionNFT",
              "label": "myBidderAmount1P",
              "type": "t_mapping(t_address,t_mapping(t_uint256,t_uint256))",
              "src": "contracts/EnglishAuctionNFT.sol:61"
            },
            {
              "contract": "EnglishAuctionNFT",
              "label": "myClaimedP",
              "type": "t_mapping(t_address,t_mapping(t_uint256,t_bool))",
              "src": "contracts/EnglishAuctionNFT.sol:63"
            },
            {
              "contract": "EnglishAuctionNFT",
              "label": "bidCountP",
              "type": "t_mapping(t_uint256,t_uint256)",
              "src": "contracts/EnglishAuctionNFT.sol:66"
            },
            {
              "contract": "EnglishAuctionNFT",
              "label": "token1P",
              "type": "t_mapping(t_uint256,t_address)",
              "src": "contracts/EnglishAuctionNFT.sol:68"
            },
            {
              "contract": "EnglishAuctionNFT",
              "label": "checkToken0",
              "type": "t_bool",
              "src": "contracts/EnglishAuctionNFT.sol:71"
            },
            {
              "contract": "EnglishAuctionNFT",
              "label": "token0List",
              "type": "t_mapping(t_address,t_bool)",
              "src": "contracts/EnglishAuctionNFT.sol:74"
            },
            {
              "contract": "EnglishAuctionNFT",
              "label": "fee",
              "type": "t_uint256",
              "src": "contracts/EnglishAuctionNFT.sol:76"
            },
            {
              "contract": "EnglishAuctionNFT",
              "label": "feeMax",
              "type": "t_uint256",
              "src": "contracts/EnglishAuctionNFT.sol:78"
            },
            {
              "contract": "EnglishAuctionNFT",
              "label": "feeTo",
              "type": "t_address_payable",
              "src": "contracts/EnglishAuctionNFT.sol:80"
            },
            {
              "contract": "EnglishAuctionNFT",
              "label": "poolTime",
              "type": "t_mapping(t_uint256,t_bool)",
              "src": "contracts/EnglishAuctionNFT.sol:83"
            }
          ],
          "types": {
            "t_array(t_struct(Pool)4848_storage)dyn_storage": {
              "label": "struct EnglishAuctionNFT.Pool[]"
            },
            "t_struct(Pool)4848_storage": {
              "label": "struct EnglishAuctionNFT.Pool",
              "members": [
                {
                  "label": "creator",
                  "type": "t_address_payable"
                },
                {
                  "label": "name",
                  "type": "t_string_storage"
                },
                {
                  "label": "token0",
                  "type": "t_address"
                },
                {
                  "label": "tokenId",
                  "type": "t_uint256"
                },
                {
                  "label": "tokenAmount0",
                  "type": "t_uint256"
                },
                {
                  "label": "amountMin1",
                  "type": "t_uint256"
                },
                {
                  "label": "amountMinIncr1",
                  "type": "t_uint256"
                },
                {
                  "label": "confirmTime",
                  "type": "t_uint256"
                },
                {
                  "label": "closeAt",
                  "type": "t_uint256"
                },
                {
                  "label": "nftType",
                  "type": "t_uint256"
                }
              ]
            },
            "t_address_payable": {
              "label": "address payable"
            },
            "t_string_storage": {
              "label": "string"
            },
            "t_address": {
              "label": "address"
            },
            "t_uint256": {
              "label": "uint256"
            },
            "t_mapping(t_uint256,t_bool)": {
              "label": "mapping(uint256 => bool)"
            },
            "t_bool": {
              "label": "bool"
            },
            "t_mapping(t_uint256,t_address_payable)": {
              "label": "mapping(uint256 => address payable)"
            },
            "t_mapping(t_uint256,t_uint256)": {
              "label": "mapping(uint256 => uint256)"
            },
            "t_mapping(t_string_memory_ptr,t_uint256)": {
              "label": "mapping(string => uint256)"
            },
            "t_mapping(t_address,t_array(t_uint256)dyn_storage)": {
              "label": "mapping(address => uint256[])"
            },
            "t_array(t_uint256)dyn_storage": {
              "label": "uint256[]"
            },
            "t_mapping(t_address,t_mapping(t_uint256,t_uint256))": {
              "label": "mapping(address => mapping(uint256 => uint256))"
            },
            "t_mapping(t_address,t_mapping(t_uint256,t_bool))": {
              "label": "mapping(address => mapping(uint256 => bool))"
            },
            "t_mapping(t_uint256,t_address)": {
              "label": "mapping(uint256 => address)"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "FixedSwapNFT": {
        "version": {
          "withMetadata": "878dad0e8ec68e6033c75c37c883d6d5c31c7be7be7983fd09e5d13970280feb",
          "withoutMetadata": "c8c9dda36b5a41bc7d64a44ba9ba39db5e4ef69ea856b210d87da29db529fc85",
          "linkedWithoutMetadata": "c8c9dda36b5a41bc7d64a44ba9ba39db5e4ef69ea856b210d87da29db529fc85"
        },
        "inherit": [
          "IERC721Receiver",
          "Configurable",
          "Governable",
          "Initializable"
        ],
        "libraries": [
          "SafeMath",
          "SafeERC20"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "FixedSwapNFT",
              "label": "pools",
              "type": "t_array(t_struct(Pool)6246_storage)dyn_storage",
              "src": "contracts/FixedSwapNFT.sol:42"
            },
            {
              "contract": "FixedSwapNFT",
              "label": "myCreatedP",
              "type": "t_mapping(t_address,t_uint256)",
              "src": "contracts/FixedSwapNFT.sol:45"
            },
            {
              "contract": "FixedSwapNFT",
              "label": "myNameP",
              "type": "t_mapping(t_string_memory_ptr,t_uint256)",
              "src": "contracts/FixedSwapNFT.sol:47"
            },
            {
              "contract": "FixedSwapNFT",
              "label": "creatorClaimedP",
              "type": "t_mapping(t_uint256,t_bool)",
              "src": "contracts/FixedSwapNFT.sol:50"
            },
            {
              "contract": "FixedSwapNFT",
              "label": "swappedP",
              "type": "t_mapping(t_uint256,t_bool)",
              "src": "contracts/FixedSwapNFT.sol:51"
            },
            {
              "contract": "FixedSwapNFT",
              "label": "checkToken0",
              "type": "t_bool",
              "src": "contracts/FixedSwapNFT.sol:54"
            },
            {
              "contract": "FixedSwapNFT",
              "label": "token0List",
              "type": "t_mapping(t_address,t_bool)",
              "src": "contracts/FixedSwapNFT.sol:56"
            },
            {
              "contract": "FixedSwapNFT",
              "label": "swappedAmount0P",
              "type": "t_mapping(t_uint256,t_uint256)",
              "src": "contracts/FixedSwapNFT.sol:59"
            },
            {
              "contract": "FixedSwapNFT",
              "label": "swappedAmount1P",
              "type": "t_mapping(t_uint256,t_uint256)",
              "src": "contracts/FixedSwapNFT.sol:61"
            }
          ],
          "types": {
            "t_array(t_struct(Pool)6246_storage)dyn_storage": {
              "label": "struct FixedSwapNFT.Pool[]"
            },
            "t_struct(Pool)6246_storage": {
              "label": "struct FixedSwapNFT.Pool",
              "members": [
                {
                  "label": "creator",
                  "type": "t_address_payable"
                },
                {
                  "label": "name",
                  "type": "t_string_storage"
                },
                {
                  "label": "token0",
                  "type": "t_address"
                },
                {
                  "label": "token1",
                  "type": "t_address"
                },
                {
                  "label": "tokenId",
                  "type": "t_uint256"
                },
                {
                  "label": "amountTotal0",
                  "type": "t_uint256"
                },
                {
                  "label": "amountTotal1",
                  "type": "t_uint256"
                },
                {
                  "label": "closeAt",
                  "type": "t_uint256"
                },
                {
                  "label": "nftType",
                  "type": "t_uint256"
                }
              ]
            },
            "t_address_payable": {
              "label": "address payable"
            },
            "t_string_storage": {
              "label": "string"
            },
            "t_address": {
              "label": "address"
            },
            "t_uint256": {
              "label": "uint256"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)"
            },
            "t_mapping(t_string_memory_ptr,t_uint256)": {
              "label": "mapping(string => uint256)"
            },
            "t_mapping(t_uint256,t_bool)": {
              "label": "mapping(uint256 => bool)"
            },
            "t_bool": {
              "label": "bool"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)"
            },
            "t_mapping(t_uint256,t_uint256)": {
              "label": "mapping(uint256 => uint256)"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "FreeExhibitionHallNFT": {
        "version": {
          "withMetadata": "0bcf789d1efd4146281a6515f775e93c6324b3d27658b2b9a704f0173a7f723b",
          "withoutMetadata": "27a1b1993b4e23bfe5b87e8ab2f71213b683e4d2e7ef634c584615f7ca8e295b",
          "linkedWithoutMetadata": "27a1b1993b4e23bfe5b87e8ab2f71213b683e4d2e7ef634c584615f7ca8e295b"
        },
        "inherit": [
          "ERC721",
          "IERC721Enumerable",
          "IERC721Metadata",
          "IERC721",
          "ERC165",
          "IERC165",
          "Context",
          "Governable",
          "Initializable"
        ],
        "libraries": [],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "FreeExhibitionHallNFT",
            "src": "contracts/FreeExhibitionHallNFT.sol:21"
          }
        ],
        "layout": {
          "storage": [
            {
              "contract": "FreeExhibitionHallNFT",
              "label": "_counter",
              "type": "t_uint256",
              "src": "contracts/FreeExhibitionHallNFT.sol:11"
            },
            {
              "contract": "FreeExhibitionHallNFT",
              "label": "artist",
              "type": "t_mapping(t_address,t_bool)",
              "src": "contracts/FreeExhibitionHallNFT.sol:14"
            }
          ],
          "types": {
            "t_uint256": {
              "label": "uint256"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)"
            },
            "t_address": {
              "label": "address"
            },
            "t_bool": {
              "label": "bool"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "Configurable": {
        "version": {
          "withMetadata": "036e467c13a9e997896d61e819e094bb1a84b2bd88649f05c23e7bfa88fd7fce",
          "withoutMetadata": "bac30abb193906da312261f2a037e6852f621987881a75bf8f9855c72e56243a",
          "linkedWithoutMetadata": "bac30abb193906da312261f2a037e6852f621987881a75bf8f9855c72e56243a"
        },
        "inherit": [
          "Governable",
          "Initializable"
        ],
        "libraries": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "Configurable",
              "label": "config",
              "type": "t_mapping(t_bytes32,t_uint256)",
              "src": "contracts/Governable.sol:118"
            }
          ],
          "types": {
            "t_mapping(t_bytes32,t_uint256)": {
              "label": "mapping(bytes32 => uint256)"
            },
            "t_bytes32": {
              "label": "bytes32"
            },
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "Governable": {
        "version": {
          "withMetadata": "94eee548be16c032dd761a93bee8ba9d3722a206845c3f210e59e47d163cb2ff",
          "withoutMetadata": "8a11bf0f10ff34fb3b2b7db61c7301f4f99fe6dc8c72a0484a9f76af2f6a6fb0",
          "linkedWithoutMetadata": "8a11bf0f10ff34fb3b2b7db61c7301f4f99fe6dc8c72a0484a9f76af2f6a6fb0"
        },
        "inherit": [
          "Initializable"
        ],
        "libraries": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "Governable",
              "label": "governor",
              "type": "t_address",
              "src": "contracts/Governable.sol:67"
            }
          ],
          "types": {
            "t_address": {
              "label": "address"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "Initializable": {
        "version": {
          "withMetadata": "d0dfb6f0fbd797fca6fc8b191a7756d94b4def39954957cd75c1e456a7f4566f",
          "withoutMetadata": "ac0db523ddc3e330f735df7b3b0b24460531c71290a891170e840f8f67d5ff6b",
          "linkedWithoutMetadata": "ac0db523ddc3e330f735df7b3b0b24460531c71290a891170e840f8f67d5ff6b"
        },
        "inherit": [],
        "libraries": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "Initializable",
              "label": "initialized",
              "type": "t_bool",
              "src": "contracts/Governable.sol:22"
            },
            {
              "contract": "Initializable",
              "label": "initializing",
              "type": "t_bool",
              "src": "contracts/Governable.sol:27"
            },
            {
              "contract": "Initializable",
              "label": "______gap",
              "type": "t_array(t_uint256)50_storage",
              "src": "contracts/Governable.sol:62"
            }
          ],
          "types": {
            "t_bool": {
              "label": "bool"
            },
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]"
            },
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1"
        }
      }
    }
  ]
}